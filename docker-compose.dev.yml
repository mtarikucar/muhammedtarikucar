services:
  # PostgreSQL Database
  postgresql:
    image: postgres:15
    container_name: blog_postgresql_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgresql_dev_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - blog_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d blogdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: blog_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - blog_network_dev

  # Backend Server (Development mode with hot reload)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: blog_server_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://admin:password123@postgresql:5432/blogdb
      REDIS_URL: redis://redis:6379
      CLIENT_URL: http://localhost:3000
      JWT_SECRET: dev_jwt_secret_key_123
      JWT_REFRESH_SECRET: dev_refresh_secret_key_456
      REFRESH_TOKEN_SECRET: dev_refresh_secret_key_456
    ports:
      - "5000:5000"
      - "9229:9229" # Debug port
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - blog_network_dev
    command: npm run dev

  # Frontend Client (Development mode with hot reload)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: blog_client_dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3000:3000"
      - "3001:3001" # HMR port
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - blog_network_dev
    command: npm run dev

volumes:
  postgresql_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  blog_network_dev:
    driver: bridge
